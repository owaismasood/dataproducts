class(x$V2)
source("http://www.openintro.org/stat/data/present.R")
dim(present)
names
names(present)
present$girls
plot(data = present, x = year , y = grils)
plot(data = present, x = year , y = girls)
plot(x = present$year , y = present$girls)
present$total = present$boys + present$girls
names(present)
present[present$total == max(present$total), 1]
plot(x = present$year , y = present$boys)
present$propboys = present$boys/present$total
lot(x = present$year , y = present$propboys)
plot(x = present$year , y = present$propboys)
plot(x = present$year , y = present$propboys, type = 'l')
summary(present$propboys)
plot(x = present$year , y = present$boys/present$girls, type = 'l')
?abs
present$abs = abs(present$boys-present$girls)
plot(x = present$year , y = present$abs, type = 'l')
max(present$abs)
present[present$abs == max(present$abs),]
http://tribune.com.pk/story/760924/waqar-zaka-to-host-living-on-the-edge-at-pti-sit-ins-in-islamabad/
source("http://www.openintro.org/stat/data/cdc.R")
dim(cdc)
names(cdc)
str(cdc)
distinct(cdc$genhlth)
unique(cdc$genhlth)
unique(cdc$smoke100)
unique(cdc$gender)
count(cdc$gender == 'm')
sum(cdc$gender == 'm')
hist(cdc$genhlth)
table(cdc$genhlth)
table(cdc$genhlth)/20000
table(cdc$smoke100 , cdc$gender)
table(cdc$gender , cdc$smoke100)
temp <- table(cdc$gender , cdc$smoke100)
mosaicplot(temp)
names(cdc)
cdc[$gender]
cdc$smoke100 & cdc$age < 23
cdc[cdc$smoke100 & cdc$age < 23,]
nrows(cdc[cdc$smoke100 & cdc$age < 23,])
nrow(cdc[cdc$smoke100 & cdc$age < 23,])
bmi = (cdc$weight/cdc$height^2) * 703
boxplot(cdc$genhlth ~ bmi)
boxplot(bmi ~ cdc$genhlth)
names(cdc)
plot(cdc$weight, cdc$wtdesire)
3 choose 2
?choose
choose(3,2)
choose(3,1)
3^0,51
3^0.51
x <- c(140,138,150,148,135)
x
x1 <- c(132,135,151,146,130)
?t.test
output <- t.test(x,x1)
output
output <- t.test(x,x1,paired = TRUE)
output
mean  <- 1100
n <- 9
sd <- 30
se <- sd / sqrt(n)
?Qt
?tq
?qt
qt(0.975)
qt(0.975,n-1)
mean + c(-1,1) * se * qt(0.975,n-1)
choose(4,3)
choose(4,4)
4 * 0.5^4
0.5^4
0.0625 + 0.25
10/1787 * 100
lambda <- 1/100
lambdat <- 10/1787 * 100
?ppois
ppois(lambdat, lambda)
1 - ppois(lambdat, lambda)
ppois(9,18, lower.tail = FALSE)
ppois(9,18, lower.tail = true)
ppois(9,18, lower.tail = TRUE)
ppois(10,18, lower.tail = TRUE)
?rnorm
group1 <- rnorm(9,mean = -3 , sd = 1.5)
group2 <- rnorm(9,mean = 1, sd = 1.8)
?r.test
?t.test
t.test(group1, group2, var.equal = TRUE)
n = 100
n <- 100
u <- 0.1
u0 <- 0.01
sd <- 0.04
se <- 0.01/sqrt(sd)
power.t.test
?power.t.test
power.t.test(n = 100, delta = u0 , sd = se , type = "one.sample", alt = "one.sided")$power
mu0 <- 0.01
mua <- 0
sigma <- 0.04
n <- 100
z <- qnorm(1 - 0.05)
pnorm(mu0 + z * sigma/sqrt(n), mean = mu0, sd = sigma/sqrt(n), lower.tail = FALSE)
pnorm(mu0 + z * sigma/sqrt(n), mean = mua, sd = sigma/sqrt(n), lower.tail = FALSE)
x <- pnorm(mu0 + z * sigma/sqrt(n), mean = mua, sd = sigma/sqrt(n), lower.tail = FALSE)
round(x,2)
?round
pnorm(mu0 + z * sigma/sqrt(n), mean = mua, sd = sigma/sqrt(n), lower.tail = FALSE)
round(x,5)
round(x,10)
round(x,7)
round(x,3)
round(x,4)
round(x,5)
mu0 <- 0.01
mua <- 0
sigma <- 0.04
n <- 100
z <- qnorm(0.95)
pnorm(mu0 + z * sigma/sqrt(n), mean = mua, sd = sigma/sqrt(n), lower.tail = FALSE)
se <- sigma/sqrt(n)
pnorm(mu0 + z*se, mean = 0 , sd = se, lower.tail= FALSE)
power.t.test(power = 0.9, delta = mu0, sd = se, type = "one.sample", alt = "one.sided")$n
power.t.test(power = 0.9, delta = mu0, sd = .04, type = "one.sample", alt = "one.sided")$n
pnorm(mu0 - z * se, mean = 0 , sd = se, lower.tail= FALSE)
pnorm(mu0 - z * se, mean = 0 , sd = se)
data(ToothGrowth)
ToothGrowth
n <- 288
sd <- 12
num <- 2 * (s^2 * (n-1))
num <- 2 * (ss^2 * (n-1))
num <- 2 * (sd^2 * (n-1))
sp <- sqrt((num)/(n+n-2)
)
pooled <- sqrt((1/n + 1/n))
se <- sp * pooled
se
pooled
sp
n + n + 2
n + n - 2
x <- c(0.18, -1.54, 0.42, 0.95)
mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
coef(lm(y ~ x)()
)
coef(lm(y ~ x))
data(mtcars)
coef(lm(mtcars$mpg ~ mtcars$wt))
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
y <- sd(x)
z <- mean(x)
x <- x - z / y
x
x <- (x - z) / y
x
y
sd(x)
x - mean(x)
(x - mean(x))/ sd(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
coef(lm(y~x))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
coef(lm(y~x))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
y <- x - 0.300
y
y^2
z <- w * y^2
sum(z)
y <- x - 0.1471
z <- w * y^2
sum(z)
y <- x - 1.077
z <- w * y^2
sum(z)
y <- x - 0.0025
z <- w * y^2
sum(z)
?lm
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
coef(lm(y~x-1))
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
liner <- lm( y ~ x)
summary(liner)
y
meany <- mean(y)
y- meany
sum(y-meany)
summary(liner)
0.7224/0.3107
resid(liner)
sd(resid(liner))
residuals <- resid(liner)
r2 <- sum(residuals^2)
n <- size(r2)
n <- length(r2)
sigma <- sqrt(r2/n-2)
r2
n <- length(residuals)
sigma <- sqrt(r2/n-2)
n
sigma
sqrt(0.348097/7)
data(mtcars)
mtcars$mpg
mpg <- mtcars$mpg
wgt <- mtcars$wt
mwgt <- wgt - mean(wgt)
lmt <- lm(mpg ~ wgt)
plot(lmy)
plot(lmt)
plot(lmt)
summary(lmt)
n <- length(mpg)
n
liner$df
lmt$df
37.2851 - 1.8776 * qt(0.975,30)
lmt <- lm(mtcars$mpg ~ mtcars$wt)
summary(lmt)
rt <- mtcars$wt - mean(mtcars$wt)
lmt <- lm(mtcars$mpg ~ rt)
summary(lmt)
20.0906 - qt(0.975,30)*0.5384
?mtcars
model <- lm(mtcars$mpg ~ mtcars$wt)
?predit
?predict
mtcars$wt
newwt <- 3000/100
newwt <- 3000/1000
output <- predict(model, newdata=newwt)
output
new.cars <- data.frame(wt=c(3))
output <- predict(model, newdata=new.cars)
output
output <- predict(model, newdata=3)
output
newdata = data.frame(wt=3)
output <- predict(model, newdata)
summary(model)
newdata = data.frame(mtcars$wt=3)
model <- lm(mpg,wt, data=mtcars)
model <- lm( mpg~wt , data=mtcars)
newdata = data.frame(wt=3)
predict(model,newdata)
predict(model,newdata,interval='prediction')
y <- mtcars$wt
yhat1 <- predit(model)
yhat1 <- predict(model)
yhat1
model
y
y <- mtcars$mpg
y
y <- mtcars$mpg
ssyhat <- sum((y-yhat)^2)
ssyhat <- sum((y-yhat1)^2)
ssyhat
ssyhat1 <- sum((y-mean(y))^2)
ssyhat1
1126.047/278.3219
model
adjust <- lm( mpg ~ I(wt*2), data = mtcars)
summary(adjust)
-2.6722 - 0.2796*qt(0.975,30)
adjust <- lm( mpg ~ I(wt/2), data = mtcars)
adjust
summary(adjust)
-10.689 - 1.118*qt(0.975,30)
adjust <- lm( mpg ~ I(wt+2), data = mtcars)
summary(adjust)
adjust <- lm( mpg ~ wt, data = mtcars)
summary(adjust)
fit <- lm(mpg ~ wt, data = mtcars)
summary(fit)
yhat <- predict(fit)
sse <- sum((mtcars$mpg - yhat)^2)
sse
fit2 <- lm(mpg ~ offset(wt), data = mtcars)
yhat2 <- predict(fit2)
sse2 <- sum((mtcars$mpg - yhat2)^2)
sse/sse2
adjust <- lm( mpg ~ wt, data = mtcars)
adjust$coefficients
adjust <- lm( mpg ~ wt + 2, data = mtcars)
adjust <- lm( mpg ~ I(wt + 2), data = mtcars)
adjust$coefficients
37.285126 - 2(-5.344472)
37.285126 - 2*(-5.344472)
y
x
x <- y-2
x <- y-2 * sin(x)
x
y
b1 <- cov(x,y)sd(y)/sd(x)
b1 <- cov(x,y)*sd(y)/sd(x)
plot(x,y)
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
)
data(mtcars)
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
})
data(cars)
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
?dtable
library(dtable)
library(swirl)
swirl()
install_from_swirl("Regression Models")
swirl()
plot(child ~ parent , galton)
plot(jitter(child,4) ~ parent,galton)
regrline <- lm(child ~ parent , galton)
abline(regrline , lwd = 3, col='red')
summary(regrline)
fit <- lm(child~parent,data=galton)
dim(galton)
summary(fit)
swirl()
swirl()
swirl()
fit <- lm(child~parent , data=galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals,
| galton$parent
cov(fit$residuals, galton$parent)
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
rhs - lhs
lhs - rhs
all.equal(lhs,rhs)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <-
var(ols.slope)
varEst <- var(est(ols.slope, ols.ic))
all.equal(varEst,varChild)
all.equal(varChild,varEst+varRes)
efit <- lm(accel ~ mag+dist, attenu)
mean(efit$resid)
mean(efit$residuals)
cov(attenu$mag,efit$residuals)
cov(attenu$dist,efit$residuals)
cor(gpa_nor,gch_nor)
l_nor <- lm( gch_nor ~ gpa_nor)
x
x
exit
exit()
swirl()
x <- -100 : 100
plot(x)
x
y <- 2 * x + rnorm(sd = 2 , mean = 1)
y <- 2 * x + rnorm(100, mean = 1 , sd = 2 )
?rnorm
rnorm(100)
y <- 2 * x + rnorm(100)
y <- 2*x + rnorm()
y <- 2*x + rnorm(100)
y <- 2* x + rnorm(100)
y <- 2 * jitter(x)
y
plot(x,y)
y <- 2 * jitter(x , n = 10)
?jitter
y <- 2 * jitter(x , factor = 10)
plot(x,y)
y <- rnorm(100) * 2
y <- x + y
y <- 2*x + rnorm(2200)
y <- 2*x + rnorm(200)
y <- 2*x + rnorm(201)
plot(x,y)
plot(x,y)
y <- 2*x*rnorm(201) + 56
plot(x,y)
y <- 2*x + 56 + rnorm(201)
plot(x,y)
y <- 2*x*rnorm(201) + 56 + )
y <- 2*x*rnorm(201) + 56
plot(x,y)
linear <- lm(y~x)
ablines
ablines(linear)
abline(linear)
data(mtcars)
summary(mtcars)
?mtcars
plot(x = mtcars$wt, y = mtcars$mpg)
plot(x = mtcars$wt, y = mtcars$mpg, pch = 19)
plot(x = mtcars$wt, y = mtcars$mpg, pch = 14)
plot(x = mtcars$wt, y = mtcars$mpg, pch = 19)
plot(x = mtcars$wt, y = mtcars$mpg, pch = 19, color = 'red')
plot(x = mtcars$wt, y = mtcars$mpg, pch = 19)
lm <- lm(mpg ~ wt , data = mtcars)
abline(lm, color = 'red')
summary(lm)
summary(lm)
lm <- lm(mpg ~ I(wt - mean(wt)) , data = mtcars)
?haha
x < 1 : 100
x <- 1 : 100
y <- 2*x + rnorm(100, sd = 15)
plot(x,y)
y <- -2*x + rnorm(100, sd = 15)
plot(x,y)
y <- -2*x + rnorm(100, sd = 55)
plot(x,y)
linear <- lm(y~x)
abline(linear)
plot(x, linear$residuals)
source('~/RegModel/project.R')
mtcars$am
boxplot(mtcars$am,mtcars$mpg)
data(mtcars)
boxplot(mtcars$am,mtcars$mpg)
plot(mtcars$am,mtcars$mpg)
plot(mtcars$am,mtcars$mpg,col = mtcars$am )
plot(mtcars$am,mtcars$mpg,col = (2*mtcars$am) )
plot(mtcars$am,mtcars$mpg,col = (2*(1+mtcars$am)) )
?mtcars
automaticCarsMpg <- mtcars[mtcars$am =0 , mtcars$mpg]
automaticCarsMpg <- mtcars[mtcars$am == 0 , mtcars$mpg]
automaticCarsMpg <- mtcars[mtcars$am == 0 , 1]
automaticCarsMpg
automaticMpg <- mtcars[mtcars$am == 0 , 1]
manualMpg <- mtcars[mtcars$am == 1 , 1]
ttest <- t.test(automaticMpg,manualMpg)
ttest
ttest$p.value
ttest$conf.int
dataframe <- data.frame['P Value' = ttest$p.value , 'Confidence Interval' = ttest$conf.int]
dataframe <- data.frame('P Value' = ttest$p.value , 'Confidence Interval' = ttest$conf.int)
dataframe
?step
step(lm(mpg~.,data=mtcars))
step <- step(lm(mpg~.,data=mtcars))
mtcars$am <- as.factor(mtcars$am);mtcars$cyl <- as.factor(mtcars$cyl)
mtcars$gear <- as.factor(mtcars$gear); mtcars$vs <- as.factor(mtcars$vs)
mtcars$card <- as.factor(mtcars$carb)
step <- step(lm(mpg~.,data=mtcars))
step$anova
step$rank
names(step)
step
summary(step)
modelSelected$coefficients
confint(modelSelected)
?mtcars
mean(mtcars$mpg)
summary(mtcars$mpg)
plot(mtcars$am,mtcars$mpg)
publish(title = 'mytitle', 'index.html', host = 'rpubs')
library(slidify)
publish(title = 'mytitle', 'index.html', host = 'rpubs')
slidify('index.rmd')
slidify('index.rmd')
getwd()
setwd("~/Data Science specialization/Developing Data Products/Regression_Lesson/Regression_Lesson")
slidify('index.rmd')
publish(title = 'mytitle', 'index.html', host = 'rpubs')
publish(title = 'mytitle', 'index.html', host = 'rpubs')
publish(title = 'mytitle', 'index.html', host = 'rpubs')
publish(user = "owaismasood", repo = "dataproducts")
publish(user = "owaismasood", repo = "dataproducts")
publish(title = 'mytitle', 'index.html', host = 'rpubs')
publish(title = 'mytitle', 'index.html', host = 'rpubs')
publish(title = 'mytitle', 'index.html', host = 'rpubs')
publish(title = 'mytitle', 'index.html', host = 'rpubs')
library("RCurl", lib.loc="~/R/win-library/3.1")
library("bitops", lib.loc="~/R/win-library/3.1")
library("rmarkdown", lib.loc="~/R/win-library/3.1")
publish(title = 'mytitle', 'index.html', host = 'rpubs')
publish(title = 'mytitle', 'index.html', host = 'rpubs')
publish(title = 'mytitle', 'index.html', host = 'rpubs')
publish(user = "USER", repo = "REPO")
